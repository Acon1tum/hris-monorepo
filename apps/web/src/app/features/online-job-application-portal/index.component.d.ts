import { OnInit, ElementRef, AfterViewInit } from '@angular/core';
import { Router } from '@angular/router';
import { JobPortalService, JobPosting, SalaryRange } from './job-portal.service';
import { AuthService } from '../../services/auth.service';
import { JobApplicationForm } from './job-application-modal/job-application-modal.component';
export declare class OnlineJobApplicationPortalComponent implements OnInit, AfterViewInit {
    private jobPortalService;
    private router;
    private authService;
    publicMode: boolean;
    jobs: JobPosting[];
    filteredJobs: JobPosting[];
    salaryRanges: SalaryRange[];
    departments: string[];
    loading: boolean;
    error: string | null;
    selectedJob: JobPosting | null;
    searchKeywords: string;
    selectedDepartment: string;
    selectedSalaryRange: string;
    showJobModal: boolean;
    modalJob: JobPosting | null;
    showFavourites: boolean;
    favourites: string[];
    showApplicationModal: boolean;
    applicationJob: JobPosting | null;
    showLoginPromptModal: boolean;
    loginPromptJob: JobPosting | null;
    isHeaderVisible: boolean;
    lastScrollTop: number;
    scrollThreshold: number;
    headerHeight: number;
    scrollDirection: string;
    activeFilters: {
        key: string;
        label: string;
    }[];
    modalCloseBtn: ElementRef<HTMLButtonElement>;
    constructor(jobPortalService: JobPortalService, router: Router, authService: AuthService);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnChanges(): void;
    onWindowScroll(): void;
    handleModalKeydown(event: KeyboardEvent): void;
    private handleScroll;
    fetchJobs(): void;
    fetchSalaryRanges(): void;
    fetchDepartments(): void;
    searchJobs(): void;
    removeFilter(key: string): void;
    clearFilters(): void;
    selectJob(job: JobPosting): void;
    openViewModal(job: JobPosting): void;
    closeViewModal(): void;
    applyToJob(job: JobPosting): void;
    closeApplicationModal(): void;
    closeLoginPromptModal(): void;
    onLoginPromptContinue(): void;
    navigateToLogin(): void;
    onApplicationSubmitted(applicationData: JobApplicationForm): void;
    shareJob(job: JobPosting): void;
    get isMobile(): boolean;
    getDepartmentThemeClass(department: string | undefined): string;
    get displayedJobs(): JobPosting[];
    toggleFavourite(job: JobPosting): void;
    isFavourite(job: JobPosting): boolean;
}
//# sourceMappingURL=index.component.d.ts.map