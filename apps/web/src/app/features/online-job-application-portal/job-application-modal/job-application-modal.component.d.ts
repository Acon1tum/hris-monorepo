import { EventEmitter, OnInit, ElementRef } from '@angular/core';
import { FormBuilder, FormGroup } from '@angular/forms';
import { JobPortalAuthService, JobApplicant } from '../job-portal-auth.service';
import { AuthService } from '../../../services/auth.service';
import { UserDetailsService } from '../../../services/user-details.service';
export interface JobApplicationForm {
    position_id: string;
    applicant_id: string;
    cover_letter?: string;
    status: 'Pending' | 'Pre_Screening' | 'For_Interview' | 'For_Examination' | 'Shortlisted' | 'Selected' | 'Rejected' | 'Withdrawn' | 'Hired';
    application_date: Date;
    withdrawn_date?: Date;
    remarks?: string;
}
export interface UploadedDocument {
    id: string;
    name: string;
    size: number;
    type: string;
    file: File;
    uploadDate: Date;
}
export declare class JobApplicationModalComponent implements OnInit {
    private jobPortalAuthService;
    private fb;
    private authService;
    private userDetailsService;
    job: any;
    showModal: boolean;
    close: EventEmitter<void>;
    applicationSubmitted: EventEmitter<JobApplicationForm>;
    fileInput: ElementRef<HTMLInputElement>;
    modalBody: ElementRef<HTMLDivElement>;
    applicant: JobApplicant | null;
    applicationForm: FormGroup;
    private _currentStep;
    totalSteps: number;
    get currentStep(): number;
    set currentStep(value: number);
    isLoading: boolean;
    submitted: boolean;
    confirmationChecked: boolean;
    firstName: string;
    middleName: string;
    lastName: string;
    email: string;
    contact: string;
    uploadedDocuments: UploadedDocument[];
    isDragOver: boolean;
    maxFileSize: number;
    allowedFileTypes: string[];
    constructor(jobPortalAuthService: JobPortalAuthService, fb: FormBuilder, authService: AuthService, userDetailsService: UserDetailsService);
    ngOnInit(): void;
    fetchUserDetailsFromDatabase(): void;
    populateUserDetails(): void;
    initializeForm(): void;
    scrollToTop(): void;
    nextStep(): void;
    previousStep(): void;
    goToStep(step: number): void;
    isStepValid(): boolean;
    isStepCompleted(step: number): boolean;
    canClickStep(step: number): boolean;
    isNextActiveStep(step: number): boolean;
    submitApplication(): void;
    closeModal(): void;
    getStepProgress(): number;
    getStepTitle(step: number): string;
    getStepDescription(step: number): string;
    getCoverLetterLength(): number;
    getRemarksLength(): number;
    onDragOver(event: DragEvent): void;
    onDragLeave(event: DragEvent): void;
    onDrop(event: DragEvent): void;
    onFileSelected(event: Event): void;
    handleFiles(files: File[]): void;
    validateFile(file: File): boolean;
    addFile(file: File): void;
    removeFile(documentId: string): void;
    generateId(): string;
    formatFileSize(bytes: number): string;
    getFileIcon(fileType: string): string;
    onConfirmationChange(checked: boolean): void;
    onConfirmationCheckboxChange(event: Event): void;
}
//# sourceMappingURL=job-application-modal.component.d.ts.map