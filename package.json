{
  "name": "hris-monorepo",
  "version": "1.0.0",
  "private": true,
  "description": "HRIS Monorepo with Angular frontend and Express backend",
  "workspaces": [
    "apps/*",
    "packages/*"
  ],
  "scripts": {
    "build": "turbo run build",
    "dev": "turbo run dev",
    "dev:apps": "turbo run dev --parallel --filter=api --filter=web",
    "lint": "turbo run lint",
    "test": "turbo run test",
    "clean": "turbo run clean",
    "type-check": "turbo run type-check",
    "web:dev": "turbo run dev --filter=web",
    "api:dev": "turbo run dev --filter=api",
    "db:generate": "dotenv -e .env -- pnpm -F db db:generate",
    "db:push": "dotenv -e .env -- pnpm -F db db:push",
    "db:migrate": "dotenv -e .env -- pnpm -F db db:migrate",
    "db:seed": "dotenv -e .env -- pnpm -F db db:seed",
    "db:studio": "dotenv -e .env -- pnpm -F db db:studio",

    "job:generate": "dotenv -e .env -- pnpm -F job-portal-db db:generate",
    "job:push": "dotenv -e .env -- pnpm -F job-portal-db db:push",
    "job:migrate": "dotenv -e .env -- pnpm -F job-portal-db db:migrate",
    "job:seed": "dotenv -e .env -- pnpm -F job-portal-db db:seed",
    "job:studio": "dotenv -e .env -- pnpm -F job-portal-db db:studio",

    "lms:generate": "dotenv -e .env -- pnpm -F lms-db db:generate",
    "lms:push": "dotenv -e .env -- pnpm -F lms-db db:push",
    "lms:migrate": "dotenv -e .env -- pnpm -F lms-db db:migrate",
    "lms:seed": "dotenv -e .env -- pnpm -F lms-db db:seed",
    "lms:studio": "dotenv -e .env -- pnpm -F lms-db db:studio",

    "db:generate:all": "pnpm accounts:generate && pnpm personnel:generate && pnpm attendance:generate && pnpm leave:generate && pnpm payroll:generate && pnpm performance:generate && pnpm reports:generate && pnpm system:generate && pnpm db:generate && pnpm job:generate && pnpm lms:generate",
    "db:push:all": "pnpm accounts:push && pnpm personnel:push && pnpm attendance:push && pnpm leave:push && pnpm payroll:push && pnpm performance:push && pnpm reports:push && pnpm system:push && pnpm db:push && pnpm job:push && pnpm lms:push",
    "db:migrate:all": "pnpm accounts:migrate && pnpm personnel:migrate && pnpm attendance:migrate && pnpm leave:migrate && pnpm payroll:migrate && pnpm performance:migrate && pnpm reports:migrate && pnpm system:migrate && pnpm db:migrate && pnpm job:migrate && pnpm lms:migrate",
    "db:seed:all": "pnpm accounts:seed && pnpm db:seed",
    "db:studio:all": "pnpm db:studio && pnpm job:studio && pnpm lms:studio",
    "help": "node -e \"const m=require('./package.json').scriptsMeta;console.log(JSON.stringify(m,null,2))\"",

    "accounts:generate": "dotenv -e .env -- pnpm -F accounts-db db:generate",
    "accounts:push": "dotenv -e .env -- pnpm -F accounts-db db:push",
    "accounts:migrate": "dotenv -e .env -- pnpm -F accounts-db db:migrate",
    "accounts:seed": "dotenv -e .env -- pnpm -F accounts-db db:seed",
    "accounts:studio": "dotenv -e .env -- pnpm -F accounts-db db:studio",

    "personnel:generate": "dotenv -e .env -- pnpm -F personnel-db db:generate",
    "personnel:push": "dotenv -e .env -- pnpm -F personnel-db db:push",
    "personnel:migrate": "dotenv -e .env -- pnpm -F personnel-db db:migrate",
    "personnel:studio": "dotenv -e .env -- pnpm -F personnel-db db:studio",

    "attendance:generate": "dotenv -e .env -- pnpm -F attendance-db db:generate",
    "attendance:push": "dotenv -e .env -- pnpm -F attendance-db db:push",
    "attendance:migrate": "dotenv -e .env -- pnpm -F attendance-db db:migrate",
    "attendance:studio": "dotenv -e .env -- pnpm -F attendance-db db:studio",

    "leave:generate": "dotenv -e .env -- pnpm -F leave-db db:generate",
    "leave:push": "dotenv -e .env -- pnpm -F leave-db db:push",
    "leave:migrate": "dotenv -e .env -- pnpm -F leave-db db:migrate",
    "leave:studio": "dotenv -e .env -- pnpm -F leave-db db:studio",

    "payroll:generate": "dotenv -e .env -- pnpm -F payroll-db db:generate",
    "payroll:push": "dotenv -e .env -- pnpm -F payroll-db db:push",
    "payroll:migrate": "dotenv -e .env -- pnpm -F payroll-db db:migrate",
    "payroll:studio": "dotenv -e .env -- pnpm -F payroll-db db:studio",

    "performance:generate": "dotenv -e .env -- pnpm -F performance-db db:generate",
    "performance:push": "dotenv -e .env -- pnpm -F performance-db db:push",
    "performance:migrate": "dotenv -e .env -- pnpm -F performance-db db:migrate",
    "performance:studio": "dotenv -e .env -- pnpm -F performance-db db:studio",

    "reports:generate": "dotenv -e .env -- pnpm -F reports-db db:generate",
    "reports:push": "dotenv -e .env -- pnpm -F reports-db db:push",
    "reports:migrate": "dotenv -e .env -- pnpm -F reports-db db:migrate",
    "reports:studio": "dotenv -e .env -- pnpm -F reports-db db:studio",

    "system:generate": "dotenv -e .env -- pnpm -F system-db db:generate",
    "system:push": "dotenv -e .env -- pnpm -F system-db db:push",
    "system:migrate": "dotenv -e .env -- pnpm -F system-db db:migrate",
    "system:studio": "dotenv -e .env -- pnpm -F system-db db:studio"
  },
  "scriptsMeta": {
    "db:generate": "Generate Prisma client for HRIS DB using root .env",
    "db:push": "Push HRIS schema to DB (non-destructive sync)",
    "db:migrate": "Run HRIS migrations (dev)",
    "db:seed": "Seed HRIS database",
    "db:studio": "Open Prisma Studio for HRIS",
    "job:generate": "Generate Prisma client for Job Portal DB",
    "job:push": "Push Job Portal schema to DB",
    "job:migrate": "Run Job Portal migrations (dev)",
    "job:seed": "Seed Job Portal database",
    "job:studio": "Open Prisma Studio for Job Portal",
    "lms:generate": "Generate Prisma client for LMS DB",
    "lms:push": "Push LMS schema to DB",
    "lms:migrate": "Run LMS migrations (dev)",
    "lms:seed": "Seed LMS database",
    "lms:studio": "Open Prisma Studio for LMS",
    "db:generate:all": "Generate Prisma clients for all DBs",
    "db:push:all": "Push schemas for all DBs",
    "db:migrate:all": "Run migrations for all DBs (dev)",
    "db:seed:all": "Seed all databases",
    "db:studio:all": "Open Prisma Studio for all DBs",
    "accounts:generate": "Generate Prisma client for Accounts/Auth DB",
    "accounts:push": "Push Accounts schema to DB",
    "accounts:migrate": "Run Accounts migrations (dev)",
    "accounts:seed": "Seed Accounts database",
    "accounts:studio": "Open Prisma Studio for Accounts DB",

    "personnel:generate": "Generate Prisma client for Personnel DB",
    "personnel:push": "Push Personnel schema",
    "personnel:migrate": "Migrate Personnel DB (dev)",
    "personnel:studio": "Open Prisma Studio for Personnel",
    "attendance:generate": "Generate Prisma client for Attendance DB",
    "attendance:push": "Push Attendance schema",
    "attendance:migrate": "Migrate Attendance DB (dev)",
    "attendance:studio": "Open Prisma Studio for Attendance",
    "leave:generate": "Generate Prisma client for Leave DB",
    "leave:push": "Push Leave schema",
    "leave:migrate": "Migrate Leave DB (dev)",
    "leave:studio": "Open Prisma Studio for Leave",
    "payroll:generate": "Generate Prisma client for Payroll DB",
    "payroll:push": "Push Payroll schema",
    "payroll:migrate": "Migrate Payroll DB (dev)",
    "payroll:studio": "Open Prisma Studio for Payroll",
    "performance:generate": "Generate Prisma client for Performance DB",
    "performance:push": "Push Performance schema",
    "performance:migrate": "Migrate Performance DB (dev)",
    "performance:studio": "Open Prisma Studio for Performance",
    "reports:generate": "Generate Prisma client for Reports DB",
    "reports:push": "Push Reports schema",
    "reports:migrate": "Migrate Reports DB (dev)",
    "reports:studio": "Open Prisma Studio for Reports",
    "system:generate": "Generate Prisma client for System DB",
    "system:push": "Push System schema",
    "system:migrate": "Migrate System DB (dev)",
    "system:studio": "Open Prisma Studio for System"
  },
  "devDependencies": {
    "@turbo/gen": "^1.10.12",
    "@types/multer": "^1.4.13",
    "@types/node": "^20.8.0",
    "@types/uuid": "^10.0.0",
    "turbo": "^1.10.12",
    "dotenv-cli": "^7.4.2",
    "typescript": "^5.2.2"
  },
  "packageManager": "pnpm@8.10.0",
  "engines": {
    "node": ">=18.0.0",
    "pnpm": ">=8.0.0"
  },
  "dependencies": {
    "multer": "^1.4.5-lts.1",
    "uuid": "^13.0.0"
  }
}
